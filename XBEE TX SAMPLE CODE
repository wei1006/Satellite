// XBee S2 TX Analog

// This program has been modified by Liaw Hwee Choo, Jan 2013.
// This program requires XBee Lib ver. 0.4 and above.

/* Copyright (c) 2009 Andrew Rapp. All rights reserved.
 * This file is part of XBee-Arduino.
 * XBee-Arduino is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * XBee-Arduino is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with XBee-Arduino.  If not, see <http://www.gnu.org/licenses/>.
 */

// This example is for XBee Series 2  
// Send a ZB TX request with the value of analogRead(A10), and 
// Check the status response for success
#include <XBee.h>

// create the XBee object
XBee xbee = XBee();

uint8_t payload[] = { 0, 0 };

// SH + SL Address of receiving XBee                             // Remote XBee    
 XBeeAddress64 addr64 = XBeeAddress64(0x0013A200, 0x4098DA0D); // address of the receiver XBee
   
ZBTxRequest zbTx = ZBTxRequest(addr64, payload, sizeof(payload));
ZBTxStatusResponse txStatus = ZBTxStatusResponse();

int value     = 0;
int statusLed = 10; // green
int errorLed  = 11; // red
int dataLed   = 12; // yellow

void flashLed(int pin, int times, int wait) 
{
  for (int i = 0; i < times; i++) 
  {
    digitalWrite(pin, HIGH);
    delay(wait);
    digitalWrite(pin, LOW);
    if (i + 1 < times) delay(wait);
  }
}

void setup()
{
  pinMode(statusLed, OUTPUT);
  pinMode(errorLed,  OUTPUT);
  pinMode(dataLed,   OUTPUT);

 Serial.begin(9600);
  // start xbee in serial 2
  Serial2.begin(9600);
  xbee.setSerial(Serial2);
// xbee.begin(9600);
}

void loop()
{   
   // convert 10-bit reading into two bytes and place in payload
   value = analogRead(A1);
   payload[0] = value >> 8 & 0xff;
   payload[1] = value & 0xff;
    
   xbee.send(zbTx);
   // flash TX indicator
   flashLed(dataLed, 1, 10);
    
   // after sending a tx request, we expect a status response
   // wait up to half a second for the status response
   if (xbee.readPacket(500))
   {
     // got a response!
     // should be a znet tx status            	
     if (xbee.getResponse().getApiId() == ZB_TX_STATUS_RESPONSE)
     {
        xbee.getResponse().getZBTxStatusResponse(txStatus);
        // get the delivery status, the fifth byte
        if (txStatus.getDeliveryStatus() == SUCCESS) 
        {
          // success.  time to celebrate
          // flashLed(statusLed, 5, 10); 
		  flashLed(statusLed, 1, 10); 
     Serial.print("Hi");
        } 
        else
        {
          // the remote XBee did not receive our packet. is it powered on?
          flashLed(errorLed, 1, 50);
          Serial.print("Bye");
        }
      }      
   } 
   else 
   {
     // local XBee did not provide a timely TX Status Response -- should not happen
     flashLed(errorLed, 5, 50);
     Serial.print("idk");
   }
   delay(1000);
}
